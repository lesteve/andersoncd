
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_cd_sym.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_cd_sym.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_cd_sym.py:


Convergence of CD, pseudo-symmetric CD, and their Anderson versions
==================================================================

On least squares and logistic regression, performance of pseudo-symmetric
coordinate descent.

.. GENERATED FROM PYTHON SOURCE LINES 9-31

.. code-block:: default

    from collections import defaultdict
    import time

    import numpy as np
    import seaborn as sns
    from scipy import sparse
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from scipy.sparse.linalg import cg, svds
    from scipy.optimize import fmin_l_bfgs_b
    from libsvmdata import fetch_libsvm

    from andersoncd.plot_utils import configure_plt, _plot_legend_apart
    from andersoncd.lasso import solver_enet, primal_enet
    from andersoncd.logreg import solver_logreg, primal_logreg


    save_fig = False
    # save_fig = True

    configure_plt()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    usetex mode requires TeX.




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Load the data:

.. GENERATED FROM PYTHON SOURCE LINES 33-41

.. code-block:: default

    dataset = "real-sim"
    n_features = 1000
    X, y = fetch_libsvm(dataset)

    X = X[:, :n_features]
    X.multiply(1 / sparse.linalg.norm(X, axis=0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset: real-sim

    <72309x1000 sparse matrix of type '<class 'numpy.float64'>'
    	with 1124310 stored elements in COOrdinate format>



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Generate figures for both Least Squares and Logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 43-188

.. code-block:: default

    for pb in ("ols", "logreg"):
        if pb == 'lasso':
            y -= y.mean()
            y /= norm(y)

        f_gap = 10
        tol = 1e-15
        max_iter = 1000

        t_start = time.time()
        t_optimal = []
        # run "best algorithm": conj. grad. for LS, LBFGS for logreg:
        E_optimal = []
        if pb == "logreg":
            rho = svds(X, k=1)[1][0] ** 2 / 100_000  # a bit of enet regularization
            E_optimal.append(np.log(2) * len(y))
            t_optimal.append(0)
            label_opt = "L-BFGS"
            tmax = 20
            t_start = time.time()

            def callback(x):
                pobj = primal_logreg(X @ x, y, x, 0, rho)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            def obj(x):
                return np.log(1 + np.exp(- y * (X @ x))).sum() + rho * x @ x / 2

            def fprime(x):
                return - X.T @ (y / (1 + np.exp(y * (X @ x)))) + rho * x

            fmin_l_bfgs_b(obj, np.zeros(
                X.shape[1]), fprime=fprime, callback=callback, factr=0.01, pgtol=0,
                maxiter=max_iter)
        else:
            alpha = 0
            rho = 0  # no elastic net
            E_optimal.append(norm(y) ** 2 / 2)
            t_optimal.append(0)
            label_opt = "conjugate grad."
            t_start = time.time()
            tmax = 3

            def callback(x):
                pobj = primal_enet(y - X @ x, x, alpha)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            cg(X.T @ X, X.T @ y, callback=callback, maxiter=max_iter, tol=1e-32)
        E_optimal = np.array(E_optimal)

        all_algos = [
            ('cd', False),
            ('cd', True),
            ('cdsym', False),
            ('cdsym', True),
            ('rcd', False),
        ]

        dict_coef = defaultdict(lambda: 1)
        dict_coef['cdsym'] = 2
        algo_names = {}
        algo_names["cd", False] = "CD"
        algo_names["rcd", False] = "RCD"
        algo_names["cdsym", False] = "CD sym"
        algo_names["cd", True] = "CD - Anderson"
        algo_names["cdsym", True] = "CD sym - Anderson"

        dict_Es = {}
        dict_times = {}

        for algo in all_algos:
            print("Running %s" % algo_names[algo])
            if pb == "ols":
                _, E, _, times = solver_enet(
                    X, y, alpha=alpha, f_gap=f_gap,
                    max_iter=int(max_iter/dict_coef[algo[0]]), tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            elif pb == "logreg":
                _, E, _, times = solver_logreg(
                    X, y, alpha=alpha, rho=rho, f_gap=f_gap,
                    max_iter=max_iter//dict_coef[algo[0]], tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            dict_Es[algo] = E
            dict_times[algo] = times

        current_palette = sns.color_palette("colorblind")
        dict_color = {}
        dict_color["cd"] = current_palette[1]
        dict_color['cdsym'] = current_palette[2]
        dict_color["rcd"] = current_palette[3]

        p_star = E_optimal[-1]
        for E in dict_Es.values():
            p_star = min(p_star, min(E))

        plt.close('all')
        fig, ax = plt.subplots(figsize=(10, 5))
        for algo in all_algos:
            E = dict_Es[algo]
            use_acc = algo[1]
            linestyle = 'dashed' if use_acc else 'solid'
            ax.semilogy(
                dict_times[algo],
                # dict_coef[algo[0]] * f_gap * np.arange(len(E)),
                E - p_star,
                label=algo_names[algo],
                color=dict_color[algo[0]], linestyle=linestyle)

        ax.semilogy(
            t_optimal,
            # np.arange(len(E_optimal)),
            E_optimal - p_star,
            label=label_opt, color='black', linestyle='dashdot')

        dict_dataset = {}
        dict_dataset["rcv1.binary"] = "rcv1"
        dict_dataset["real-sim"] = "real_sim"  # use _ not - for latex
        dict_dataset["leukemia"] = "leukemia"

        str_info = "%s (%i st columns)" % (dataset, n_features)
        title = pb + str_info

        plt.ylabel(r"Suboptimality")
        plt.xlabel(r"Time (s)")
        plt.xlim((0, tmax))
        plt.ylim((1e-10, None))
        plt.tight_layout()

        if save_fig:
            fig_dir = ""
            fig_dir_svg = ""
            fig.savefig(
                "%senergies_cdsym_%s_time.pdf" % (fig_dir, pb),
                bbox_inches="tight")
            fig.savefig(
                "%senergies_cdsym_%s_time.svg" % (fig_dir, pb),
                bbox_inches="tight")
            _plot_legend_apart(
                ax, "%senergies_cdsym_%s_legend.pdf" % (fig_dir, pb), ncol=4)

        plt.legend()
        plt.title(title.replace('_', ' '))
        plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_cd_sym_001.png
    :alt: logregreal-sim (1000 st columns)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running CD
    Running CD - Anderson
    Running CD sym
    Running CD sym - Anderson
    Running RCD
    Running CD
    elapsed time: 0.000716 
    elapsed time: 0.621914 
    elapsed time: 0.912724 
    elapsed time: 1.213414 
    elapsed time: 1.515542 
    elapsed time: 1.830075 
    elapsed time: 2.111580 
    elapsed time: 2.413405 
    elapsed time: 2.705703 
    elapsed time: 2.991467 
    elapsed time: 3.281370 
    elapsed time: 3.576321 
    elapsed time: 3.877917 
    elapsed time: 4.170604 
    elapsed time: 4.463712 
    elapsed time: 4.758918 
    elapsed time: 5.052491 
    elapsed time: 5.331925 
    elapsed time: 5.617987 
    elapsed time: 5.907628 
    elapsed time: 6.197538 
    elapsed time: 6.488590 
    elapsed time: 6.808820 
    elapsed time: 7.114064 
    elapsed time: 7.421121 
    elapsed time: 7.722357 
    elapsed time: 8.014015 
    elapsed time: 8.298327 
    elapsed time: 8.588760 
    elapsed time: 8.881896 
    elapsed time: 9.178792 
    elapsed time: 9.477965 
    elapsed time: 9.776253 
    elapsed time: 10.067183 
    elapsed time: 10.363439 
    elapsed time: 10.662293 
    elapsed time: 10.944482 
    elapsed time: 11.238747 
    elapsed time: 11.527087 
    elapsed time: 11.832699 
    elapsed time: 12.125660 
    elapsed time: 12.425135 
    elapsed time: 12.715271 
    elapsed time: 13.009505 
    elapsed time: 13.294302 
    elapsed time: 13.565809 
    elapsed time: 13.841339 
    elapsed time: 14.136250 
    elapsed time: 14.405961 
    elapsed time: 14.682664 
    elapsed time: 14.960447 
    elapsed time: 15.252778 
    elapsed time: 15.549616 
    elapsed time: 15.838369 
    elapsed time: 16.144882 
    elapsed time: 16.432348 
    elapsed time: 16.721878 
    elapsed time: 16.986831 
    elapsed time: 17.248676 
    elapsed time: 17.523202 
    elapsed time: 17.809126 
    elapsed time: 18.077127 
    elapsed time: 18.377989 
    elapsed time: 18.653835 
    elapsed time: 18.927219 
    elapsed time: 19.219265 
    elapsed time: 19.504069 
    elapsed time: 19.789100 
    elapsed time: 20.074722 
    Running CD - Anderson
    elapsed time: 0.000901 
    elapsed time: 0.284766 
    elapsed time: 0.573671 
    elapsed time: 0.868003 
    elapsed time: 1.150619 
    elapsed time: 1.451091 
    elapsed time: 1.748072 
    elapsed time: 2.032018 
    elapsed time: 2.316427 
    elapsed time: 2.608947 
    elapsed time: 2.899986 
    elapsed time: 3.192083 
    elapsed time: 3.497455 
    elapsed time: 3.778582 
    elapsed time: 4.069081 
    elapsed time: 4.360738 
    elapsed time: 4.649324 
    elapsed time: 4.939641 
    elapsed time: 5.216624 
    elapsed time: 5.496172 
    elapsed time: 5.924835 
    elapsed time: 6.223278 
    elapsed time: 6.532521 
    elapsed time: 6.822085 
    elapsed time: 7.114260 
    elapsed time: 7.393364 
    elapsed time: 7.670698 
    elapsed time: 7.956802 
    elapsed time: 8.231442 
    elapsed time: 8.514605 
    elapsed time: 8.801607 
    elapsed time: 9.083301 
    elapsed time: 9.371218 
    elapsed time: 9.660305 
    elapsed time: 9.945705 
    elapsed time: 10.227230 
    elapsed time: 10.517689 
    elapsed time: 10.799728 
    elapsed time: 11.095138 
    elapsed time: 11.376653 
    elapsed time: 11.651604 
    elapsed time: 11.935816 
    elapsed time: 12.230791 
    elapsed time: 12.507951 
    elapsed time: 12.797538 
    elapsed time: 13.081831 
    elapsed time: 13.367230 
    elapsed time: 13.660760 
    elapsed time: 13.954106 
    elapsed time: 14.230299 
    elapsed time: 14.510812 
    elapsed time: 14.798535 
    elapsed time: 15.085834 
    elapsed time: 15.366531 
    elapsed time: 15.650797 
    elapsed time: 15.928559 
    elapsed time: 16.214399 
    elapsed time: 16.496560 
    elapsed time: 16.779635 
    elapsed time: 17.068700 
    elapsed time: 17.352580 
    elapsed time: 17.637530 
    elapsed time: 17.910282 
    elapsed time: 18.192044 
    elapsed time: 18.466655 
    elapsed time: 18.740854 
    elapsed time: 19.026093 
    elapsed time: 19.316671 
    elapsed time: 19.597850 
    elapsed time: 19.894551 
    elapsed time: 20.211511 
    Running CD sym
    elapsed time: 0.000641 
    elapsed time: 0.560845 
    elapsed time: 1.164883 
    elapsed time: 1.779884 
    elapsed time: 2.350323 
    elapsed time: 2.918160 
    elapsed time: 3.550846 
    elapsed time: 4.151205 
    elapsed time: 4.787331 
    elapsed time: 5.402315 
    elapsed time: 6.002613 
    elapsed time: 6.578771 
    elapsed time: 7.178844 
    elapsed time: 7.779813 
    elapsed time: 8.366031 
    elapsed time: 8.938370 
    elapsed time: 9.529128 
    elapsed time: 10.172278 
    elapsed time: 10.777652 
    elapsed time: 11.375382 
    elapsed time: 11.966390 
    elapsed time: 12.558334 
    elapsed time: 13.171499 
    elapsed time: 13.761794 
    elapsed time: 14.354241 
    elapsed time: 14.969244 
    elapsed time: 15.595300 
    elapsed time: 16.179071 
    elapsed time: 16.773253 
    elapsed time: 17.434289 
    elapsed time: 18.043524 
    elapsed time: 18.653754 
    elapsed time: 19.266849 
    elapsed time: 19.878931 
    elapsed time: 20.472169 
    Running CD sym - Anderson
    elapsed time: 0.000672 
    elapsed time: 0.587047 
    elapsed time: 1.182949 
    elapsed time: 1.745163 
    elapsed time: 2.312111 
    elapsed time: 2.888186 
    elapsed time: 3.512878 
    elapsed time: 4.072796 
    elapsed time: 4.645289 
    elapsed time: 5.232393 
    elapsed time: 5.792731 
    elapsed time: 6.381566 
    elapsed time: 6.969185 
    elapsed time: 7.540756 
    elapsed time: 8.277956 
    elapsed time: 8.866963 
    elapsed time: 9.643028 
    elapsed time: 10.237846 
    elapsed time: 10.859221 
    elapsed time: 11.477705 
    elapsed time: 12.181610 
    elapsed time: 12.817426 
    elapsed time: 13.422408 
    elapsed time: 13.996529 
    elapsed time: 14.723146 
    elapsed time: 15.386330 
    elapsed time: 16.046301 
    elapsed time: 16.695657 
    elapsed time: 17.356697 
    elapsed time: 17.960692 
    elapsed time: 18.613421 
    elapsed time: 19.229037 
    elapsed time: 19.848727 
    elapsed time: 20.447336 
    Running RCD
    elapsed time: 0.000771 
    elapsed time: 0.295722 
    elapsed time: 0.621699 
    elapsed time: 0.949889 
    elapsed time: 1.292274 
    elapsed time: 1.587344 
    elapsed time: 1.883246 
    elapsed time: 2.182867 
    elapsed time: 2.480948 
    elapsed time: 2.790274 
    elapsed time: 3.105985 
    elapsed time: 3.411073 
    elapsed time: 3.725924 
    elapsed time: 4.020995 
    elapsed time: 4.331155 
    elapsed time: 4.634517 
    elapsed time: 4.936357 
    elapsed time: 5.234312 
    elapsed time: 5.542233 
    elapsed time: 5.828936 
    elapsed time: 6.120229 
    elapsed time: 6.412556 
    elapsed time: 6.709196 
    elapsed time: 7.039118 
    elapsed time: 7.367615 
    elapsed time: 7.671659 
    elapsed time: 7.982556 
    elapsed time: 8.303957 
    elapsed time: 8.607527 
    elapsed time: 8.924964 
    elapsed time: 9.218736 
    elapsed time: 9.517302 
    elapsed time: 9.824874 
    elapsed time: 10.130908 
    elapsed time: 10.429483 
    elapsed time: 10.724511 
    elapsed time: 11.022841 
    elapsed time: 11.310410 
    elapsed time: 11.629105 
    elapsed time: 11.919265 
    elapsed time: 12.206018 
    elapsed time: 12.537894 
    elapsed time: 12.838825 
    elapsed time: 13.170236 
    elapsed time: 13.461870 
    elapsed time: 13.753031 
    elapsed time: 14.050117 
    elapsed time: 14.353951 
    elapsed time: 14.651754 
    elapsed time: 14.957140 
    elapsed time: 15.264511 
    elapsed time: 15.556204 
    elapsed time: 15.853271 
    elapsed time: 16.153570 
    elapsed time: 16.442154 
    elapsed time: 16.744164 
    elapsed time: 17.046384 
    elapsed time: 17.355817 
    elapsed time: 17.660382 
    elapsed time: 17.971154 
    elapsed time: 18.268042 
    elapsed time: 18.571084 
    elapsed time: 18.859719 
    elapsed time: 19.165366 
    elapsed time: 19.473398 
    elapsed time: 19.781503 
    elapsed time: 20.077541 





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  12.631 seconds)


.. _sphx_glr_download_auto_examples_plot_cd_sym.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cd_sym.py <plot_cd_sym.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cd_sym.ipynb <plot_cd_sym.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
