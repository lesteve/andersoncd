
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_cd_sym.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_cd_sym.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_cd_sym.py:


Convergence of CD, pseudo-symmetric CD, and their Anderson versions
==================================================================

On least squares and logistic regression, performance of pseudo-symmetric
coordinate descent.

.. GENERATED FROM PYTHON SOURCE LINES 9-31

.. code-block:: default

    from collections import defaultdict
    import time

    import numpy as np
    import seaborn as sns
    from scipy import sparse
    from numpy.linalg import norm
    import matplotlib.pyplot as plt
    from scipy.sparse.linalg import cg, svds
    from scipy.optimize import fmin_l_bfgs_b
    from libsvmdata import fetch_libsvm

    from andersoncd.plot_utils import configure_plt, _plot_legend_apart
    from andersoncd.lasso import solver_enet, primal_enet
    from andersoncd.logreg import solver_logreg, primal_logreg


    save_fig = False
    # save_fig = True

    configure_plt()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    usetex mode requires TeX.




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Load the data:

.. GENERATED FROM PYTHON SOURCE LINES 33-41

.. code-block:: default

    dataset = "real-sim"
    n_features = 1000
    X, y = fetch_libsvm(dataset)

    X = X[:, :n_features]
    X.multiply(1 / sparse.linalg.norm(X, axis=0))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Dataset: real-sim

    <72309x1000 sparse matrix of type '<class 'numpy.float64'>'
    	with 1124310 stored elements in COOrdinate format>



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Generate figures for both Least Squares and Logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 43-188

.. code-block:: default

    for pb in ("ols", "logreg"):
        if pb == 'lasso':
            y -= y.mean()
            y /= norm(y)

        f_gap = 10
        tol = 1e-15
        max_iter = 1000

        t_start = time.time()
        t_optimal = []
        # run "best algorithm": conj. grad. for LS, LBFGS for logreg:
        E_optimal = []
        if pb == "logreg":
            rho = svds(X, k=1)[1][0] ** 2 / 100_000  # a bit of enet regularization
            E_optimal.append(np.log(2) * len(y))
            t_optimal.append(0)
            label_opt = "L-BFGS"
            tmax = 20
            t_start = time.time()

            def callback(x):
                pobj = primal_logreg(X @ x, y, x, 0, rho)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            def obj(x):
                return np.log(1 + np.exp(- y * (X @ x))).sum() + rho * x @ x / 2

            def fprime(x):
                return - X.T @ (y / (1 + np.exp(y * (X @ x)))) + rho * x

            fmin_l_bfgs_b(obj, np.zeros(
                X.shape[1]), fprime=fprime, callback=callback, factr=0.01, pgtol=0,
                maxiter=max_iter)
        else:
            alpha = 0
            rho = 0  # no elastic net
            E_optimal.append(norm(y) ** 2 / 2)
            t_optimal.append(0)
            label_opt = "conjugate grad."
            t_start = time.time()
            tmax = 3

            def callback(x):
                pobj = primal_enet(y - X @ x, x, alpha)
                E_optimal.append(pobj)
                t_optimal.append(time.time() - t_start)

            cg(X.T @ X, X.T @ y, callback=callback, maxiter=max_iter, tol=1e-32)
        E_optimal = np.array(E_optimal)

        all_algos = [
            ('cd', False),
            ('cd', True),
            ('cdsym', False),
            ('cdsym', True),
            ('rcd', False),
        ]

        dict_coef = defaultdict(lambda: 1)
        dict_coef['cdsym'] = 2
        algo_names = {}
        algo_names["cd", False] = "CD"
        algo_names["rcd", False] = "RCD"
        algo_names["cdsym", False] = "CD sym"
        algo_names["cd", True] = "CD - Anderson"
        algo_names["cdsym", True] = "CD sym - Anderson"

        dict_Es = {}
        dict_times = {}

        for algo in all_algos:
            print("Running %s" % algo_names[algo])
            if pb == "ols":
                _, E, _, times = solver_enet(
                    X, y, alpha=alpha, f_gap=f_gap,
                    max_iter=int(max_iter/dict_coef[algo[0]]), tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            elif pb == "logreg":
                _, E, _, times = solver_logreg(
                    X, y, alpha=alpha, rho=rho, f_gap=f_gap,
                    max_iter=max_iter//dict_coef[algo[0]], tol=tol,
                    algo=algo[0], use_acc=algo[1], compute_time=True, tmax=tmax)
            dict_Es[algo] = E
            dict_times[algo] = times

        current_palette = sns.color_palette("colorblind")
        dict_color = {}
        dict_color["cd"] = current_palette[1]
        dict_color['cdsym'] = current_palette[2]
        dict_color["rcd"] = current_palette[3]

        p_star = E_optimal[-1]
        for E in dict_Es.values():
            p_star = min(p_star, min(E))

        plt.close('all')
        fig, ax = plt.subplots(figsize=(10, 5))
        for algo in all_algos:
            E = dict_Es[algo]
            use_acc = algo[1]
            linestyle = 'dashed' if use_acc else 'solid'
            ax.semilogy(
                dict_times[algo],
                # dict_coef[algo[0]] * f_gap * np.arange(len(E)),
                E - p_star,
                label=algo_names[algo],
                color=dict_color[algo[0]], linestyle=linestyle)

        ax.semilogy(
            t_optimal,
            # np.arange(len(E_optimal)),
            E_optimal - p_star,
            label=label_opt, color='black', linestyle='dashdot')

        dict_dataset = {}
        dict_dataset["rcv1.binary"] = "rcv1"
        dict_dataset["real-sim"] = "real_sim"  # use _ not - for latex
        dict_dataset["leukemia"] = "leukemia"

        str_info = "%s (%i st columns)" % (dataset, n_features)
        title = pb + str_info

        plt.ylabel(r"Suboptimality")
        plt.xlabel(r"Time (s)")
        plt.xlim((0, tmax))
        plt.ylim((1e-10, None))
        plt.tight_layout()

        if save_fig:
            fig_dir = ""
            fig_dir_svg = ""
            fig.savefig(
                "%senergies_cdsym_%s_time.pdf" % (fig_dir, pb),
                bbox_inches="tight")
            fig.savefig(
                "%senergies_cdsym_%s_time.svg" % (fig_dir, pb),
                bbox_inches="tight")
            _plot_legend_apart(
                ax, "%senergies_cdsym_%s_legend.pdf" % (fig_dir, pb), ncol=4)

        plt.legend()
        plt.title(title.replace('_', ' '))
        plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_cd_sym_001.png
    :alt: logregreal-sim (1000 st columns)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running CD
    Running CD - Anderson
    Running CD sym
    Running CD sym - Anderson
    Running RCD
    Running CD
    elapsed time: 0.000608 
    elapsed time: 0.507776 
    elapsed time: 0.768247 
    elapsed time: 1.025762 
    elapsed time: 1.280900 
    elapsed time: 1.542290 
    elapsed time: 1.798875 
    elapsed time: 2.065413 
    elapsed time: 2.380260 
    elapsed time: 2.689138 
    elapsed time: 2.999350 
    elapsed time: 3.308410 
    elapsed time: 3.618138 
    elapsed time: 3.927554 
    elapsed time: 4.244075 
    elapsed time: 4.558593 
    elapsed time: 4.874008 
    elapsed time: 5.183210 
    elapsed time: 5.492229 
    elapsed time: 5.800991 
    elapsed time: 6.110134 
    elapsed time: 6.419270 
    elapsed time: 6.727942 
    elapsed time: 7.043503 
    elapsed time: 7.362858 
    elapsed time: 7.676577 
    elapsed time: 7.982296 
    elapsed time: 8.291531 
    elapsed time: 8.600170 
    elapsed time: 8.908898 
    elapsed time: 9.218033 
    elapsed time: 9.527115 
    elapsed time: 9.842845 
    elapsed time: 10.160921 
    elapsed time: 10.474988 
    elapsed time: 10.784107 
    elapsed time: 11.093204 
    elapsed time: 11.381229 
    elapsed time: 11.632372 
    elapsed time: 11.887019 
    elapsed time: 12.139847 
    elapsed time: 12.391761 
    elapsed time: 12.644433 
    elapsed time: 12.896276 
    elapsed time: 13.148562 
    elapsed time: 13.402794 
    elapsed time: 13.673258 
    elapsed time: 13.945471 
    elapsed time: 14.206389 
    elapsed time: 14.457546 
    elapsed time: 14.724949 
    elapsed time: 14.978310 
    elapsed time: 15.233960 
    elapsed time: 15.491314 
    elapsed time: 15.748678 
    elapsed time: 16.000474 
    elapsed time: 16.251312 
    elapsed time: 16.515962 
    elapsed time: 16.767962 
    elapsed time: 17.019553 
    elapsed time: 17.277083 
    elapsed time: 17.527730 
    elapsed time: 17.779836 
    elapsed time: 18.030333 
    elapsed time: 18.281715 
    elapsed time: 18.532120 
    elapsed time: 18.783641 
    elapsed time: 19.034093 
    elapsed time: 19.285131 
    elapsed time: 19.535876 
    elapsed time: 19.787150 
    elapsed time: 20.037459 
    Running CD - Anderson
    elapsed time: 0.000667 
    elapsed time: 0.263089 
    elapsed time: 0.532858 
    elapsed time: 0.796169 
    elapsed time: 1.055793 
    elapsed time: 1.319288 
    elapsed time: 1.582620 
    elapsed time: 1.839293 
    elapsed time: 2.105718 
    elapsed time: 2.411667 
    elapsed time: 2.672268 
    elapsed time: 2.935783 
    elapsed time: 3.202068 
    elapsed time: 3.507551 
    elapsed time: 3.770462 
    elapsed time: 4.032889 
    elapsed time: 4.299825 
    elapsed time: 4.566182 
    elapsed time: 4.831202 
    elapsed time: 5.089945 
    elapsed time: 5.382716 
    elapsed time: 5.695341 
    elapsed time: 6.016809 
    elapsed time: 6.351026 
    elapsed time: 6.685908 
    elapsed time: 6.942014 
    elapsed time: 7.204903 
    elapsed time: 7.466643 
    elapsed time: 7.724246 
    elapsed time: 7.986442 
    elapsed time: 8.249534 
    elapsed time: 8.524951 
    elapsed time: 8.865327 
    elapsed time: 9.196076 
    elapsed time: 9.515931 
    elapsed time: 9.840671 
    elapsed time: 10.184924 
    elapsed time: 10.505204 
    elapsed time: 10.829706 
    elapsed time: 11.168812 
    elapsed time: 11.494643 
    elapsed time: 11.819231 
    elapsed time: 12.147835 
    elapsed time: 12.479067 
    elapsed time: 12.805855 
    elapsed time: 13.127666 
    elapsed time: 13.455767 
    elapsed time: 13.791360 
    elapsed time: 14.116136 
    elapsed time: 14.436129 
    elapsed time: 14.781117 
    elapsed time: 15.105205 
    elapsed time: 15.425399 
    elapsed time: 15.763314 
    elapsed time: 16.096267 
    elapsed time: 16.415474 
    elapsed time: 16.749192 
    elapsed time: 17.089766 
    elapsed time: 17.412840 
    elapsed time: 17.755748 
    elapsed time: 18.093636 
    elapsed time: 18.414228 
    elapsed time: 18.744312 
    elapsed time: 19.085729 
    elapsed time: 19.407226 
    elapsed time: 19.733803 
    elapsed time: 20.081082 
    Running CD sym
    elapsed time: 0.000667 
    elapsed time: 0.642192 
    elapsed time: 1.285419 
    elapsed time: 1.915091 
    elapsed time: 2.565414 
    elapsed time: 3.194389 
    elapsed time: 3.825303 
    elapsed time: 4.468193 
    elapsed time: 5.093774 
    elapsed time: 5.718986 
    elapsed time: 6.366013 
    elapsed time: 6.992300 
    elapsed time: 7.619659 
    elapsed time: 8.267422 
    elapsed time: 8.896963 
    elapsed time: 9.528981 
    elapsed time: 10.173553 
    elapsed time: 10.800821 
    elapsed time: 11.436053 
    elapsed time: 12.076799 
    elapsed time: 12.704971 
    elapsed time: 13.343663 
    elapsed time: 13.982578 
    elapsed time: 14.611668 
    elapsed time: 15.261373 
    elapsed time: 15.886083 
    elapsed time: 16.517940 
    elapsed time: 17.165926 
    elapsed time: 17.789947 
    elapsed time: 18.417839 
    elapsed time: 19.068166 
    elapsed time: 19.704075 
    elapsed time: 20.367994 
    Running CD sym - Anderson
    elapsed time: 0.000663 
    elapsed time: 0.675309 
    elapsed time: 1.324759 
    elapsed time: 1.992376 
    elapsed time: 2.656446 
    elapsed time: 3.296796 
    elapsed time: 3.971528 
    elapsed time: 4.606624 
    elapsed time: 5.270783 
    elapsed time: 5.954086 
    elapsed time: 6.592399 
    elapsed time: 7.261724 
    elapsed time: 7.906211 
    elapsed time: 8.572100 
    elapsed time: 9.217426 
    elapsed time: 9.883378 
    elapsed time: 10.553886 
    elapsed time: 11.250748 
    elapsed time: 11.909073 
    elapsed time: 12.586654 
    elapsed time: 13.283547 
    elapsed time: 13.952573 
    elapsed time: 14.612732 
    elapsed time: 15.292043 
    elapsed time: 15.961082 
    elapsed time: 16.600138 
    elapsed time: 17.266775 
    elapsed time: 17.907714 
    elapsed time: 18.574114 
    elapsed time: 19.217661 
    elapsed time: 19.885079 
    elapsed time: 20.537728 
    Running RCD
    elapsed time: 0.000653 
    elapsed time: 0.324184 
    elapsed time: 0.671376 
    elapsed time: 0.989015 
    elapsed time: 1.306707 
    elapsed time: 1.624184 
    elapsed time: 1.954116 
    elapsed time: 2.276128 
    elapsed time: 2.591922 
    elapsed time: 2.908010 
    elapsed time: 3.242651 
    elapsed time: 3.566436 
    elapsed time: 3.882750 
    elapsed time: 4.199641 
    elapsed time: 4.517406 
    elapsed time: 4.855153 
    elapsed time: 5.179125 
    elapsed time: 5.495440 
    elapsed time: 5.813399 
    elapsed time: 6.129757 
    elapsed time: 6.462348 
    elapsed time: 6.783207 
    elapsed time: 7.099482 
    elapsed time: 7.416986 
    elapsed time: 7.735748 
    elapsed time: 8.069763 
    elapsed time: 8.385579 
    elapsed time: 8.703423 
    elapsed time: 9.018725 
    elapsed time: 9.362801 
    elapsed time: 9.682605 
    elapsed time: 9.997811 
    elapsed time: 10.318533 
    elapsed time: 10.638438 
    elapsed time: 10.982315 
    elapsed time: 11.374882 
    elapsed time: 11.803230 
    elapsed time: 12.123332 
    elapsed time: 12.454310 
    elapsed time: 12.782889 
    elapsed time: 13.109584 
    elapsed time: 13.437027 
    elapsed time: 13.771361 
    elapsed time: 14.089566 
    elapsed time: 14.407249 
    elapsed time: 14.707142 
    elapsed time: 14.968656 
    elapsed time: 15.226598 
    elapsed time: 15.486622 
    elapsed time: 15.745818 
    elapsed time: 16.003660 
    elapsed time: 16.271658 
    elapsed time: 16.535171 
    elapsed time: 16.812215 
    elapsed time: 17.106022 
    elapsed time: 17.374489 
    elapsed time: 17.638781 
    elapsed time: 17.901686 
    elapsed time: 18.166672 
    elapsed time: 18.425972 
    elapsed time: 18.678141 
    elapsed time: 18.925505 
    elapsed time: 19.180811 
    elapsed time: 19.439267 
    elapsed time: 19.696649 
    elapsed time: 19.965903 
    elapsed time: 20.262263 





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  11.906 seconds)


.. _sphx_glr_download_auto_examples_plot_cd_sym.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cd_sym.py <plot_cd_sym.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cd_sym.ipynb <plot_cd_sym.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
